/* COPYRIGHT (C) HARRY CLARK 2024 */

/* MINIMAL FRONTEND APPLICATION USING SDL AND IMGUI */

/* THIS FILE PERTAINS TOWARDS THE FUNCTIONALITY ENCOMPASSING THE */
/* INITIALISATION AND OF THE APPLICATION WINDOW */

/* NESTED INCLUDES */

using namespace FRONTEND;

#include "window.hpp"

/* DETERMINE THE DPI WINDOW SCALE TO BE ABLE TO ACCURATELY SCALE THE WINDOW */
/* IN ACCORDANCE WITH RELATIVE MOUSE SPEEDS */

float WINDOW::GET_DPI_WINDOW_SCALE()
{
	WINDOW* WINDOW_BASE;

	/* EVALUATE THE CURRENT WINDOW SIZE */
	/* THIS WILL THEN BE ALTERED WITHIN THE FRONTEND ASPECT */

	SDL_GetWindowSize(WINDOW_BASE->GET_WINDOW(), &WINDOW_BASE->WINDOW_WIDTH, &WINDOW_BASE->WINDOW_HEIGHT);

	/* ACCOUNT FOR TWO-DIMENSIONAL SCALING IN RELATION TO DPI SPEEDS */

	WINDOW_BASE->DPI_X = (WINDOW_WIDTH > 0) ? static_cast<float>(RENDERER_WIDTH) / WINDOW_WIDTH : 1.0f;
	WINDOW_BASE->DPI_Y = (WINDOW_HEIGHT > 0) ? static_cast<float>(RENDERER_HEIGHT) / WINDOW_HEIGHT : 1.0f;
	WINDOW_BASE->DPI_SCALE = (WINDOW_BASE->DPI_X < WINDOW_BASE->DPI_Y) ? WINDOW_BASE->DPI_X : WINDOW_BASE->DPI_Y;

	return (WINDOW_BASE->DPI_SCALE < 1.0f) ? 1.0f : WINDOW_BASE->DPI_SCALE;
}
