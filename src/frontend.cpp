/* COPYRIGHT (C) HARRY CLARK 2024 */

/* MINIMAL FRONTEND APPLICATION USING SDL AND IMGUI */

/* THIS FILE PERTAINS TOWARDS THE FUNCTIONALITY ENCOMPASSING THE */
/* INITIALISATION AND OF THE FRONTEND */

/* NESTED INCLUDES */

#include "frontend.hpp"
#include "window.hpp"

WINDOW* WINDOW_BASE; 

/* INITIALISE THE MAIN WINDOW CORRESPONDENCE */
/* BY EVOKING METHODS WHICH PERTAIN TOWARDS WINDOW SIZE, PROPERTIES, ETC */

bool FRONTEND::FRONTEND_BASE::INIT(int argc, char** argv)
{
    #undef USE_SDL
    SDL_SetHint("SDL_WINDOW_DPI_SCALE", "1");

    if (SDL_Init(SDL_INIT_AUDIO | SDL_INIT_VIDEO | SDL_INIT_EVENTS | SDL_INIT_GAMECONTROLLER) < 0)
    {
        SDL_ShowSimpleMessageBox(SDL_MESSAGEBOX_ERROR, "Error: %x", "Unable to initialise SDL", NULL);
        return false;
    }

    WINDOW_BASE = new WINDOW(FRONTEND_DEFAULT_TITLE, FRONTEND_DEFAULT_WIDTH,
        FRONTEND_DEFAULT_HEIGHT, FRONTEND_FRAME_BUFFER_WIDTH,
        FRONTEND_FRAME_BUFFER_HEIGHT);

    /* ASSUMING THAT THERE IS NO PLAUSIBLE WAY TO CREATE THE WINDOW OBJECT */
    /* THROUGH THIS TERMINATOR */

    if (!WINDOW_BASE->CREATE_WINDOW(FRONTEND_DEFAULT_TITLE, FRONTEND_DEFAULT_WIDTH, FRONTEND_DEFAULT_HEIGHT))
    {
        FRONTEND::FRONTEND_BASE::DE_INIT();
        return false;
    }

    SDL_ShowWindow(WINDOW_BASE->GET_WINDOW()); 
    return true;
}


/* JUST A SIMPLE DELETE METHOD FOR ALL OF THE PRE-REQUISTIES */

void FRONTEND::FRONTEND_BASE::DE_INIT(void)
{
	delete WINDOW_BASE;
	SDL_Quit();
}

void FRONTEND::FRONTEND_BASE::UPDATE()
{
	SDL_RenderClear(WINDOW_BASE->GET_RENDERER());
}
